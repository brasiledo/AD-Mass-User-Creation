
<#
Requires 
     ActiveDirectory Module 
     MS OFFICE - EXCEL Installed

Scope:
Mass AD user account creation

Description:
Create new AD user(s) using the information provided in the filled out excel sheet

Use:
  Save the script to a dedicated folder. 

   HR to fill out excel sheet, NewUser-Input.xlsx, with user relevant user information -
      [ Username,Firstname,Lastname,Initials,Email,Streetaddress,City,Zipcode,State,Country,Telephone,Jobtitle,Company,Department ]

   Once Excel sheet information is filled out with user relevant information.  It should be saved directly to same folder as script

  Run Script, Script process:

       Converts the xlsx (excel) sheet to a csv, then imports it into a PS variable.

       Pull all the information for one or multiple users and validates user is not already created, if not, creates new AD user, adding in all the relevant information. 
 
       After script runs, post processing will archive the input xlsx file and store it in 'Archive' folder with a timestamp.
#>

# Start Script

# Delete Current CSV File
 #  Remove-Item '.\NewUsersFinal.csv' -ErrorAction SilentlyContinue

# Verify Archive Directory, Create if not present. Set variable for Archive folder
   If (test-path .\Archive){
    $archive='.\Archive' 
     }else {
         new-item -path '.\' -itemtype directory -name Archive | out-null
         $archive='.\Archive' 
}
# Verify if User creation Excel File is present first before running.  If present, sets variable for the file
     if (test-path '.\NewUser-Input.xlsx'){
        $File=gci '.\NewUser-Input.xlsx'
        }else { write-warning 'NewUser-Input Script not available. Make sure script is copied to target directory then run again.';return}

# Convert Matster Excel File to Master CSV File
    $File=gci '.\NewUser-Input.xlsx'
    $Excel = New-Object -ComObject Excel.Application
    $wb    = $Excel.Workbooks.Open($File)
    $x     = $File | Select-Object Directory, BaseName
    $n     = [System.IO.Path]::Combine($x.Directory, (("NewUsersFinal", 'csv') -join "."))
    foreach ($ws in $wb.Worksheets) {
        $ws.SaveAs($n, 6)
    }
    $Excel.Quit()
# End Excel to CSV Conversion

# Store the data from NewUsersFinal.csv in the $ADUsers variable
     $ADUsers = Import-Csv .\NewUsersFinal.csv

#### Modify Below ####
     $StandardPass='Password101'
     $Domain='teknet.local'
     $OU='OU=Automation,DC=teknet,DC=local'
     
# Set standard variables
     $Password=ConvertTo-SecureString  $StandardPass -AsPlainText -Force 

 # Loop through user data from csv and create hash table to splat for user creation
       foreach ($User in $ADUsers) {
        $existing=Get-ADUser -Filter "SamAccountName -eq '$($user.username)'"
              if (!($existing)) { 
                   $hash=@{
                        SamAccountName         = $user.username
                        UserPrincipalName      = $user.username+$Domain
                        Name                   = $user.firstname +$user.lastname
                        GivenName              = $user.firstname
                        Surname                = $user.lastname 
                        Initials               = $user.initials 
                        Enabled                = $True 
                        DisplayName            = $user.lastname +','+$user.firstname 
                        Path                   = $ou
                        City                   = $user.city 
                        PostalCode             = $user.zipcode 
                        Country                = $user.country 
                        Company                = $user.company 
                        State                  = $user.state 
                        StreetAddress          = $user.streetaddress 
                        OfficePhone            = $user.telephone 
                        EmailAddress           = $user.email 
                        Title                  = $user.jobtitle 
                        Department             = $user.department 
                        AccountPassword        = $Password        
                        ChangePasswordAtLogon  = $True 
                    }
        New-ADUser @hash -passthru  
              
   # If user does exist, give a warning
             } else {
        Write-Warning "A user account with username $($user.username) already exists in Active Directory."; continue
      } 
     }
# Rename and Archive XLSX File
     $date=(get-date -Format "MM-dd-yyyy-hhmm")
     $newname="$($file.basename)-Archive-$date"+".xlsx"
          if ($file){
               Rename-Item -path $file.fullname -newname $newname
               Move-Item -path .\$newname -Destination $archive -force
         }
     Read-Host -Prompt "Press Enter to exit"

#End of Script
